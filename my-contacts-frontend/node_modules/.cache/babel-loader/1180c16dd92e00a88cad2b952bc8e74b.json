{"ast":null,"code":"var _jsxFileName = \"D:\\\\MY CONTACTS\\\\my-contacts-frontend\\\\src\\\\pages\\\\Login.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useContext } from \"react\";\n// import { useHistory } from \"react-router-dom\";\n// import { AuthContext } from \"../contexts/AuthContext\";\n\n// const Login = () => {\n//   const [form, setForm] = useState({ email: \"\", password: \"\" });\n//   const [msg, setMsg] = useState(\"\");\n//   const { setToken } = useContext(AuthContext);\n//   const history = useHistory();\n\n//   const handleChange = e => setForm({ ...form, [e.target.name]: e.target.value });\n\n//   const handleSubmit = async e => {\n//     e.preventDefault();\n//     setMsg(\"\");\n//     try {\n//       const res = await fetch(\"/api/users/login\", {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify(form),\n//       });\n//       const data = await res.json();\n//       if (!res.ok) throw new Error(data.message || \"Login failed\");\n//       setToken(data.token);\n//       setMsg(\"Login successful!\");\n//       setTimeout(() => history.push(\"/\"), 1000);\n//     } catch (err) {\n//       setMsg(err.message);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Login</h2>\n//       <form onSubmit={handleSubmit}>\n//         <input name=\"email\" placeholder=\"Email\" value={form.email} onChange={handleChange} required />\n//         <input name=\"password\" type=\"password\" placeholder=\"Password\" value={form.password} onChange={handleChange} required />\n//         <button type=\"submit\">Login</button>\n//       </form>\n//       {msg && <div>{msg}</div>}\n//     </div>\n//   );\n// };\n\n// export default Login;\n\nimport React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport \"./.css\"; // Import CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [form, setForm] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [msg, setMsg] = useState(\"\");\n  const {\n    setToken\n  } = useContext(AuthContext);\n  const history = useHistory();\n  const handleChange = e => setForm({\n    ...form,\n    [e.target.name]: e.target.value\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMsg(\"\");\n    try {\n      const res = await fetch(\"/api/users/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(form)\n      });\n      const data = await res.json();\n      if (!res.ok) throw new Error(data.message || \"Login failed\");\n      setToken(data.token);\n      setMsg(\"Login successful!\");\n      setTimeout(() => history.push(\"/\"), 1000);\n    } catch (err) {\n      setMsg(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"email\",\n          placeholder: \"Email\",\n          value: form.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"password\",\n          type: \"password\",\n          placeholder: \"Password\",\n          value: form.password,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), msg && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"IUIugVUK7UTfShpUofP+82y/Ykw=\", false, function () {\n  return [useHistory];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useContext","useHistory","AuthContext","jsxDEV","_jsxDEV","Login","_s","form","setForm","email","password","msg","setMsg","setToken","history","handleChange","e","target","name","value","handleSubmit","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","message","token","setTimeout","push","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","onChange","required","type","_c","$RefreshReg$"],"sources":["D:/MY CONTACTS/my-contacts-frontend/src/pages/Login.jsx"],"sourcesContent":["// import React, { useState, useContext } from \"react\";\r\n// import { useHistory } from \"react-router-dom\";\r\n// import { AuthContext } from \"../contexts/AuthContext\";\r\n\r\n// const Login = () => {\r\n//   const [form, setForm] = useState({ email: \"\", password: \"\" });\r\n//   const [msg, setMsg] = useState(\"\");\r\n//   const { setToken } = useContext(AuthContext);\r\n//   const history = useHistory();\r\n\r\n//   const handleChange = e => setForm({ ...form, [e.target.name]: e.target.value });\r\n\r\n//   const handleSubmit = async e => {\r\n//     e.preventDefault();\r\n//     setMsg(\"\");\r\n//     try {\r\n//       const res = await fetch(\"/api/users/login\", {\r\n//         method: \"POST\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: JSON.stringify(form),\r\n//       });\r\n//       const data = await res.json();\r\n//       if (!res.ok) throw new Error(data.message || \"Login failed\");\r\n//       setToken(data.token);\r\n//       setMsg(\"Login successful!\");\r\n//       setTimeout(() => history.push(\"/\"), 1000);\r\n//     } catch (err) {\r\n//       setMsg(err.message);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Login</h2>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <input name=\"email\" placeholder=\"Email\" value={form.email} onChange={handleChange} required />\r\n//         <input name=\"password\" type=\"password\" placeholder=\"Password\" value={form.password} onChange={handleChange} required />\r\n//         <button type=\"submit\">Login</button>\r\n//       </form>\r\n//       {msg && <div>{msg}</div>}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Login;\r\n\r\n\r\nimport React, { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../contexts/AuthContext\";\r\nimport \"./.css\"; // Import CSS file\r\n\r\nconst Login = () => {\r\n  const [form, setForm] = useState({ email: \"\", password: \"\" });\r\n  const [msg, setMsg] = useState(\"\");\r\n  const { setToken } = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const handleChange = (e) =>\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setMsg(\"\");\r\n    try {\r\n      const res = await fetch(\"/api/users/login\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(form),\r\n      });\r\n      const data = await res.json();\r\n      if (!res.ok) throw new Error(data.message || \"Login failed\");\r\n      setToken(data.token);\r\n      setMsg(\"Login successful!\");\r\n      setTimeout(() => history.push(\"/\"), 1000);\r\n    } catch (err) {\r\n      setMsg(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-box\">\r\n        <h2>Login</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            value={form.email}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={form.password}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n          <button type=\"submit\">Login</button>\r\n        </form>\r\n        {msg && <div className=\"message\">{msg}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}